name: plan
on:
  workflow_call:
    inputs:
      targets:
        required: true
        type: string
      ref:
        required: true
        type: string
    secrets:
      gh_app_id:
        required: true
      gh_app_private_key:
        required: true
jobs:
  plan:
    timeout-minutes: 60
    name: "plan (${{matrix.target.target}})"
    runs-on: ${{matrix.target.runs_on}}
    permissions:
      id-token: write # For OIDC
      contents: read # To checkout private repositories
    env:
      TFACTION_TARGET: ${{matrix.target.target}}
      TFACTION_JOB_TYPE: ${{matrix.target.job_type}}
      GH_COMMENT_SHA1: ${{inputs.ref}}
      TFCMT_SHA: ${{inputs.ref}}
    strategy:
      fail-fast: true
      matrix:
        target: ${{fromJSON(inputs.targets)}}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{inputs.ref}}
          persist-credentials: false
      - uses: actions/create-github-app-token@c1a285145b9d317df6ced56c09f525b5c2b6f755 # v1.11.1
        id: generate_token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.gh_app_private_key }}
          owner: ${{ github.repository_owner }}
          repositories: "${{github.event.repository.name}}"
      - uses: aquaproj/aqua-installer@f13c5d2f0357708d85477aabe50fd3f725528745 # v3.1.0
        with:
          aqua_version: v2.41.0
        env:
          AQUA_GITHUB_TOKEN: ${{steps.generate_token.outputs.token}}
      - uses: Taiki130/tfaction/js@feature/test-for-terragrunt
        with:
          action: export-secrets
          # If this action doesn't export secrets as you expect, please check if secrets are passed to this action properly.
          # If you use reusable workflows, maybe secrets aren't passed to the reusable workflow.
          # If so, please pass secrets properly.
          #
          # - https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-inputs-and-secrets-to-a-reusable-workflow
          # - https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idsecrets
          secrets: ${{toJSON(secrets)}}
      # This is required to download private modules in `terraform init`
      # - run: gh auth setup-git
      - run: |
          git config --global url."https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository_owner }}".insteadOf "ssh://git@github.com/${{ github.repository_owner }}"
          gh auth setup-git
        env:
          GITHUB_TOKEN: ${{steps.generate_token.outputs.token}}
      - uses: Taiki130/tfaction/setup@feature/test-for-terragrunt
        with:
          github_token: ${{steps.generate_token.outputs.token}}
        env:
          GITHUB_TOKEN: ${{steps.generate_token.outputs.token}} # For GitHub Provider
      - uses: Taiki130/tfaction/js@feature/test-for-terragrunt
        id: target-config
        with:
          action: get-target-config
      # TODO: tfprovidercheck入れる
      # - run: |
      #     set -euo pipefail
      #     tfprovidercheck -v
      #     pwd
      #     github-comment exec -- terraform version -json | github-comment exec -- tfprovidercheck
      #   working-directory: ${{ steps.target-config.outputs.working_directory }}
      # env:
      #   GITHUB_TOKEN: ${{steps.generate_token.outputs.token}} # For github-comment
      - uses: Taiki130/tfaction/test@feature/test-for-terragrunt
        with:
          github_token: ${{steps.generate_token.outputs.token}}
        env:
          GITHUB_TOKEN: ${{steps.generate_token.outputs.token}} # For GitHub Provider and reviewdog and github-comment
          TF_VAR_github_run_id: ${{ github.run_id }}

      - uses: Taiki130/tfaction/plan@feature/test-for-terragrunt
        with:
          github_token: ${{steps.generate_token.outputs.token}}
        env:
          GITHUB_TOKEN: ${{steps.generate_token.outputs.token}} # For GitHub Provider and tfcmt and github-comment
          TF_CLI_ARGS_plan: "-parallelism=30"
          TF_VAR_github_run_id: ${{ github.run_id }}
